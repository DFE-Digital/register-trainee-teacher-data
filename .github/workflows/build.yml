name: build

on:
  push:
   branches:
    - master
  pull_request:
    branches:
    - master

env:
  DOCKER_REPO: dfedigital/register-trainee-teachers
  DOCKER_IMAGE: register-trainee-teachers

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_tag: ${{ steps.set_env.outputs.SHA_TAG }}

    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOSTNAME: localhost

    steps:
    - uses: actions/checkout@v2
    - name: Get values for current commit
      id: set_env
      run: |
        GIT_SHA_SHORT=$(echo ${GITHUB_SHA} | cut -c 1-7)
        GIT_BRANCH="${GITHUB_REF##*/}"
        echo "GIT_SHA_SHORT=$GIT_SHA_SHORT" >> $GITHUB_ENV
        echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
        echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
        echo "SHA_TAG=$GIT_SHA_SHORT" >> $GITHUB_ENV
        echo "::set-output name=SHA_TAG::$GIT_SHA_SHORT"

    - name: Login to docker hub
      run: echo "${{secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

    - name: "docker pull ${{env.DOCKER_REPO}}:${{env.BRANCH_TAG}}"
      run: docker pull $DOCKER_REPO:$BRANCH_TAG || true

    - name: "docker-compose build"
      run:  docker-compose build --build-arg COMMIT_SHA=$GITHUB_SHA

    - name: Bring images up
      run: |
        docker-compose up --no-build -d
        docker-compose exec -T web /bin/sh -c "./wait-for-command.sh -c 'nc -z db 5432' -s 0 -t 20"
        docker-compose exec -T web /bin/sh -c "yarn add jest"

    - name: Setup DB
      run: docker-compose exec -T web /bin/sh -c "bundle exec rails db:setup"

    - name: Run Ruby Linter
      run: docker-compose exec -T web /bin/sh -c 'bundle exec rubocop app config db lib spec Gemfile --format clang'

    - name: Run JavaScript Linter
      run: docker-compose exec -T web /bin/sh -c 'bundle exec rake lint:javascript'

    - name: Run SCSS Linter
      run:  docker-compose exec -T web /bin/sh -c 'bundle exec rake lint:scss'

    - name: Run Rspec tests
      run: docker-compose exec --env COVERAGE=true -T web /bin/sh -c 'bundle exec rake spec'

    - name: Run Javascript tests
      run: docker-compose exec -T web /bin/sh -c 'yarn run test'

    - name: Tag docker images
      run: docker tag ${{env.DOCKER_REPO}}:${{env.BRANCH_TAG}} ${{env.DOCKER_REPO}}:${{env.SHA_TAG}}

    - name: Push docker images to Docker Hub
      run: |
        docker push ${{env.DOCKER_REPO}}:${{env.BRANCH_TAG}}
        docker push ${{env.DOCKER_REPO}}:${{env.SHA_TAG}}

    - name: Trigger QA Deployment
      if: ${{ success() && github.ref == 'refs/heads/master' }}
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        workflow: 'Deploy to PaaS'
        token: ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
        inputs: '{"qa": "true", "staging": "true", "production": "true", "sandbox": "true", "sha": "${{ env.SHA_TAG }}"}'

    - name: Check for Failure
      if: ${{ failure() && github.ref == 'refs/heads/master' }}
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: twd_publish_register_tech
        SLACK_COLOR: '#ef5343'
        SLACK_ICON_EMOJI: ':github-logo:'
        SLACK_USERNAME: Register Trainee Teachers
        SLACK_TITLE: Build Failure
        SLACK_MESSAGE: ':alert: Build failure on ${{ github.event.inputs.environment }} :sadparrot:'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
