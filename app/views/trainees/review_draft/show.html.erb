<%= render PageTitle::View.new(title: "trainees.show", has_errors: @trainee.errors.present?) %>

<%= content_for(:breadcrumbs) do %>
  <%= render FilteredBackLink::View.new(
    href: trainees_path,
    text: t("views.all_records"),
  ) %>
<% end %>

<h1 class="govuk-heading-l">
  <% if @trainee.first_names.present? && @trainee.last_name.present? %>
    <span class="govuk-caption-l">Draft record for <%= trainee_name(@trainee) %></span>
  <% else %>
    <span class="govuk-caption-l">Draft record</span>
  <% end %>
  Add a trainee
</h1>

<%= render Trainees::RouteIndicator::View.new(trainee: @trainee) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds-from-desktop">

    <h2 class="govuk-heading-m">Personal details and education</h2>

    <%= render TaskList::View.new do |component|
          component.row(
            task_name: "Personal details",
            path: edit_trainee_personal_details_path(@trainee),
            confirm_path: trainee_personal_details_confirm_path(@trainee),
            classes: "personal-details",
            status: ProgressService.call(
              validator: PersonalDetailsForm.new(@trainee),
              progress_value: @trainee.progress.personal_details,
            ).status,
          )

          component.row(
            task_name: "Contact details",
            path: edit_trainee_contact_details_path(@trainee),
            confirm_path: trainee_contact_details_confirm_path(@trainee),
            classes: "contact-details",
            status: ProgressService.call(
              validator: ContactDetailsForm.new(@trainee),
              progress_value: @trainee.progress.contact_details,
            ).status,
          )

          component.row(
            task_name: "Diversity information",
            path: edit_trainee_diversity_disclosure_path(@trainee),
            confirm_path: diversity_confirm_path(@trainee),
            classes: "diversity-details",
            status: ProgressService.call(
              validator: Diversities::FormValidator.new(@trainee),
              progress_value: @trainee.progress.diversity,
            ).status,
          )

          component.row(
            task_name: "Degree",
            path: trainee_degrees_new_type_path(@trainee),
            confirm_path: trainee_degrees_confirm_path(@trainee),
            status: ProgressService.call(
              validator: DegreesForm.new(@trainee),
              progress_value: @trainee.progress.degrees,
            ).status,
            classes: "degree-details",
          )
        end %>

    <h2 class="govuk-heading-m">About their teacher training</h2>

    <%= render TaskList::View.new(classes: "record-setup") do |component|
      if show_publish_courses?(@trainee)
        form = ValidatePublishCourseForm.new(@trainee)
        component.row(
          task_name: "Course details",
          path: edit_trainee_publish_course_details_path(@trainee),
          confirm_path: trainee_course_details_confirm_path(@trainee),
          classes: "course-details",
          status: ProgressService.call(
            validator: form,
            progress_value: @trainee.progress.course_details,
          ).status,
        )
      else
        component.row(
          task_name: "Course details",
          path: edit_trainee_course_details_path(@trainee),
          confirm_path: trainee_course_details_confirm_path(@trainee),
          classes: "course-details",
          status: ProgressService.call(
            validator: CourseDetailsForm.new(@trainee),
            progress_value: @trainee.progress.course_details,
          ).status,
        )
      end

      component.row(
        task_name: "Trainee start date and ID",
        path: edit_trainee_training_details_path(@trainee),
        confirm_path: trainee_training_details_confirm_path(@trainee),
        classes: "training-details",
        status: ProgressService.call(
          validator: TrainingDetailsForm.new(@trainee),
          progress_value: @trainee.progress.training_details,
        ).status,
      )

      if @trainee.requires_schools?
        component.row(
          task_name: "Schools",
          path: edit_trainee_lead_schools_path(@trainee),
          confirm_path: edit_trainee_lead_schools_path(@trainee),
          classes: "school-details",
          status: ProgressService.call(
            validator: Schools::FormValidator.new(@trainee),
            progress_value: @trainee.progress.schools,
          ).status,
        )
      end

      if @trainee.requires_placement_details?
        component.row(
          task_name: "Placement details",
          path: review_draft_trainee_path(@trainee),
          confirm_path: review_draft_trainee_path(@trainee),
          classes: "placement-details",
          status: ProgressService.call(
            validator: PlacementDetailForm.new(@trainee),
            progress_value: @trainee.progress.placement_details,
          ).status,
        )
      end
    end %>
  </div>
</div>

<h2 class="govuk-heading-m">Review and submit</h2>
  <%= render GovukButtonLinkTo::View.new(body: "Review this record", url: check_details_trainee_path(@trainee), id: "check-details") %>
<p class="govuk-body"><%= govuk_link_to("Return to this draft record later", trainees_path) %></p>

<p class="govuk-body govuk-!-margin-top-8">
  <%= govuk_link_to "Delete this draft", trainee_confirm_delete_path(@trainee), class: "app-link--warning" %>
</p>
